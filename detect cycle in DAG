	def isCycle(self, V: int, adj: List[List[int]]) -> bool:
		#Code here
		graph = defaultdict()
		cycle = 0
		visited = set()
		for i, arr in enumerate(adj):
		    if arr:
		        graph[i] = arr
		def dfs(node,  parent):
		    nonlocal cycle
		    visited.add(node)
		    for neigh in graph[node]:
		        if neigh not in visited:
		            if dfs(neigh, node):
		                return True
		        elif neigh != parent:
		            cycle = True
		            return cycle
        for num in graph:
            if num not in visited:
                dfs(num, -1)
                if cycle:
                    return 1
        return 0
