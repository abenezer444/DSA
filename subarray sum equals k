class Solution(object):
    def subarraySum(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        result=0
        prefix=0
        hashT={0:1}
# for some reason the commented code has a time limit exceeded exeption,though it works exactly like the uncommented one
#         for i in nums:
#             prefix+=i
#             removedSubArr=prefix-k
#             if removedSubArr in hashT.keys():
#                 result+=hashT[removedSubArr]
#             if prefix in hashT.keys():
#                 hashT[prefix]+=1
#             else: hashT[prefix]=1

        curSum=0    
        for n in nums:
            curSum+=n
            diff=curSum-k
            result+=hashT.get(diff,0)
            hashT[curSum]=1+hashT.get(curSum,0)
        return result
            
        
