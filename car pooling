class Solution(object):
    def carPooling(self, trips, capacity):
        """
        :type trips: List[List[int]]
        :type capacity: int
        :rtype: bool
        """
        trips.sort(key=lambda t:t[1])
        minheap=[]
        currpass=0
        for t in trips:
            numpass,start,end=t
            while minheap and minheap[0][0]<=start:
                currpass-=heapq.heappop(minheap)[1]
            currpass+=numpass
            if currpass>capacity:
                return False
            heapq.heappush(minheap,(end,numpass))
        return True
        
        
        
